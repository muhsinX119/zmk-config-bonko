/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

	behaviors {
		ctrlshift_i_helper: modify_i_helper {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp I &kp UP>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
		ctrlshift_i: modify_i {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp I &ctrlshift_i_helper>;
            mods = <(MOD_LCTRL)>;
            keep-mods = <(MOD_LCTRL)>;
        };
		ctrlshift_j_helper: modify_j_helper {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp LEFT>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
		ctrlshift_j: modify_j {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&ctrlshift_j_helper>;
            mods = <(MOD_LCTRL)>;
            keep-mods = <(MOD_LCTRL)>;
        };
		ctrlshift_k_helper: modify_k_helper {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp DOWN>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
		ctrlshift_k: modify_k {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&ctrlshift_k_helper>;
            mods = <(MOD_LCTRL)>;
            keep-mods = <(MOD_LCTRL)>;
        };
		ctrlshift_l_helper: modify_l_helper {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp RIGHT>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
		ctrlshift_l: modify_l {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&ctrlshift_l_helper>;
            mods = <(MOD_LCTRL)>;
            keep-mods = <(MOD_LCTRL)>;
        };
		mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>; // Two binding cells: one for hold layer, one for tap layer
            flavor = "hold-preferred";
            tapping-term-ms = <200>; // Adjust this value for your preferred tapping speed
            bindings = <&mo>, <&tog>; // Hold = &mo, Tap = &tog
        };
        k1_to_f1: mod_morph_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LA(F1)>;
            mods = <(MOD_LALT)>;
        };
        k2_to_f2: mod_morph_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp LA(F2)>;
            mods = <(MOD_LALT)>;
        };
        k3_to_f3: mod_morph_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp LA(F3)>;
            mods = <(MOD_LALT)>;
        };
        k4_to_f4: mod_morph_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp LA(F4)>;
            mods = <(MOD_LALT)>;
        };
        k5_to_f5: mod_morph_5 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4 &kp LA(F5)>;
            mods = <(MOD_LALT)>;
        };
        k6_to_f6: mod_morph_6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp LA(F6)>;
            mods = <(MOD_LALT)>;
        };
        k7_to_f7: mod_morph_7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6 &kp LA(F7)>;
            mods = <(MOD_LALT)>;
        };
        k8_to_f8: mod_morph_8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7 &kp LA(F8)>;
            mods = <(MOD_LALT)>;
        };
        k9_to_f9: mod_morph_9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8 &kp LA(F9)>;
            mods = <(MOD_LALT)>;
        };
        k10_to_f10: mod_morph_10 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp LA(F10)>;
            mods = <(MOD_LALT)>;
        };
        k11_to_f11: mod_morph_11 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp LA(F11)>;
            mods = <(MOD_LALT)>;
        };
        k12_to_f12: mod_morph_12 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp LA(F12)>;
            mods = <(MOD_LALT)>;
        };
	};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&k1_to_f1 		&k2_to_f2		&k3_to_f3   	&k4_to_f4  			&k5_to_f5    	&k6_to_f6                           &k7_to_f7 	&k8_to_f8    	&k9_to_f9  	&k10_to_f10 	&k11_to_f11    	&k12_to_f12
&kp TAB 		&kp Q  			&kp W    		&kp E    			&kp R     		&kp T                             	&kp Y  	 	&kp U     		&kp I   	&kp O    		&kp P     		&kp BSLH
&kp ESC   		&kp A  			&kp S    		&kp D    			&kp F     		&kp G                             	&kp H  	 	&kp J     		&kp K   	&kp L    		&kp SEMI  		&kp SQT
&kp LSHFT 	 	&kp LALT	 	&kp Z    		&kp X    			&kp C     		&kp V   &kp DEL  		&kp BSPC  	&kp B  	 	&kp N     		&kp M 		&kp COMMA		&kp DOT   		&mt RSHFT FSLH
								&kp LGUI 		&mo_tog LOWER LOWER	&mt LCTRL HOME 	&none  	&kp RET     	&kp SPACE 	&kp EQUAL  	&mt RCTRL END	&kp PG_UP 	&lt LOWER PG_DN
            >;

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp F1    &kp F2    &kp F3    	&kp F4    		&kp F5    &kp F6                    			&kp F7   	&kp F8    	&kp F9    	&kp F10   	&kp F11   &kp F12
&kp GRAVE &kp N1    &kp N2    	&kp N3      	&kp N4    &kp N5                    			&kp N6    	&kp N7   	&kp UP    	&kp N9    	&kp LBKT    &kp RBKT
&bt BT_CLR    &bt BT_CLR_ALL  &kp AT    	&kp N3    	&kp N4  &kp PRCNT                 			&kp CARET 	&kp LEFT 	&kp DOWN 	&kp RIGHT  	&kp RPAR  &kp PIPE
&trans    &kp LALT	&kp MINUS 	&kp PLUS 		&kp LBRC  &kp RBRC  	&bt BT_SEL 1 	&bt BT_SEL 2  &kp LBKT  	&kp RBKT 	&kp SEMI  	&kp COLON 	&kp BSLH  &trans
                    &trans    	&trans      	&trans    &trans     	&trans 	&trans	  	&trans    	&trans   	&trans    	&trans
            >;

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
